{"ast":null,"code":"import _defineProperty from \"/Applications/MAMP/htdocs/medium-clone/admin_panel/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Applications/MAMP/htdocs/medium-clone/admin_panel/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Applications/MAMP/htdocs/medium-clone/admin_panel/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Applications/MAMP/htdocs/medium-clone/admin_panel/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Applications/MAMP/htdocs/medium-clone/admin_panel/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Applications/MAMP/htdocs/medium-clone/admin_panel/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Applications/MAMP/htdocs/medium-clone/admin_panel/src/pages/login/components/LoginForm.js\";\nimport React from 'react';\nimport { Form, Icon, Input, Button, Divider } from 'antd';\nvar FormItem = Form.Item;\n\nvar LoginForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(LoginForm, _React$Component);\n\n  function LoginForm(props) {\n    var _this;\n\n    _classCallCheck(this, LoginForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LoginForm).call(this, props));\n\n    _this.handleInputChange = function (event) {\n      var target = event.target;\n      var value = target.type === 'checkbox' ? target.checked : target.value;\n      var name = target.name;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n      console.log('Login Form submitted');\n\n      _this.props.onSubmit(_this.state);\n    };\n\n    _this.state = {\n      email: null,\n      password: null\n    };\n    return _this;\n  }\n\n  _createClass(LoginForm, [{\n    key: \"render\",\n    value: function render() {\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Login\"), React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        className: \"login-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(FormItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, getFieldDecorator('userName', {\n        rules: [{\n          required: true,\n          message: 'Please input your username'\n        }]\n      })(React.createElement(Input, {\n        name: 'email',\n        onChange: this.handleInputChange,\n        prefix: React.createElement(Icon, {\n          type: \"user\",\n          style: {\n            color: 'rgba(0,0,0,.25)'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }),\n        placeholder: \"Username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }))), React.createElement(FormItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, getFieldDecorator('password', {\n        rules: [{\n          required: true,\n          message: 'Please input your password'\n        }]\n      })(React.createElement(Input, {\n        name: 'password',\n        onChange: this.handleInputChange,\n        prefix: React.createElement(Icon, {\n          type: \"lock\",\n          style: {\n            color: 'rgba(0,0,0,.25)'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }),\n        type: \"password\",\n        placeholder: \"Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }))), React.createElement(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        className: \"login-form-button\",\n        loading: this.props.isFetching,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Log in\"), React.createElement(Divider, {\n        type: \"horizontal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), React.createElement(Button, {\n        className: \"login-form-forgot\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Forgot password?\")));\n    }\n  }]);\n\n  return LoginForm;\n}(React.Component);\n\nvar WrappedNormalLoginForm = Form.create()(LoginForm);\nexport default WrappedNormalLoginForm;","map":{"version":3,"sources":["/Applications/MAMP/htdocs/medium-clone/admin_panel/src/pages/login/components/LoginForm.js"],"names":["React","Form","Icon","Input","Button","Divider","FormItem","Item","LoginForm","props","handleInputChange","event","target","value","type","checked","name","setState","handleSubmit","e","preventDefault","console","log","onSubmit","state","email","password","getFieldDecorator","form","rules","required","message","color","isFetching","Component","WrappedNormalLoginForm","create"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Form, Icon, Input, Button, Divider} from 'antd'\n\nconst FormItem = Form.Item\n\nclass LoginForm extends React.Component {\n\n  constructor (props) {\n    super(props)\n    this.state = {\n      email: null,\n      password: null\n    }\n  }\n\n  handleInputChange = (event) => {\n    const target = event.target\n    const value = target.type === 'checkbox' ? target.checked : target.value\n    const name = target.name\n\n    this.setState({\n      [name]: value\n    })\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault()\n\n    console.log('Login Form submitted')\n\n    this.props.onSubmit(this.state)\n  }\n\n  render () {\n    const { getFieldDecorator } = this.props.form\n\n    return (\n      <React.Fragment>\n        <h1>Login</h1>\n        <Form onSubmit={this.handleSubmit} className={\"login-form\"}>\n\n          <FormItem>\n            {getFieldDecorator('userName', {\n              rules: [{required: true, message:'Please input your username'}],\n            })(\n              <Input name={'email'} onChange={this.handleInputChange}  prefix={<Icon type={\"user\"} style={{color: 'rgba(0,0,0,.25)'}} />} placeholder={\"Username\"} />\n            )}\n          </FormItem>\n          <FormItem>\n            {getFieldDecorator('password', {\n              rules: [{required: true, message:'Please input your password'}],\n            })(\n              <Input name={'password'} onChange={this.handleInputChange} prefix={<Icon type={\"lock\"} style={{color: 'rgba(0,0,0,.25)'}} />} type={\"password\"} placeholder={\"Password\"} />\n            )}\n          </FormItem>\n\n          <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" loading={this.props.isFetching}>\n            Log in\n          </Button>\n\n          <Divider type=\"horizontal\" />\n\n          <Button className={\"login-form-forgot\"}>Forgot password?</Button>\n\n        </Form>\n      </React.Fragment>\n    )\n  }\n}\n\nconst WrappedNormalLoginForm = Form.create()(LoginForm);\n\nexport default WrappedNormalLoginForm"]},"metadata":{},"sourceType":"module"}