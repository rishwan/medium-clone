{"ast":null,"code":"import _classCallCheck from \"/Applications/MAMP/htdocs/medium-clone/admin_panel/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Applications/MAMP/htdocs/medium-clone/admin_panel/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport axios from 'axios';\nimport config from '../config/api_config';\n\nvar uuidv4 = require('uuid/v4');\n\nvar apiService =\n/*#__PURE__*/\nfunction () {\n  function apiService(url, headers) {\n    _classCallCheck(this, apiService);\n\n    this.commonHeaders = headers;\n    this.axios = axios.create({\n      baseURL: url\n    });\n    /*\n         * Request Interceptor\n         */\n\n    this.axios.interceptors.request.use(function (config) {\n      config.headers.request_id = uuidv4(); //let originalRequest = config\n\n      var token_expiry = localStorage.getItem('token_expiry');\n      var now = new Date(); // console.log('time_now____: '+now);\n      // console.log('token_expiry: '+token_expiry);\n\n      if (token_expiry < now) {// console.log('yes, token has expired');\n      } else {// console.log('no, token has not expired');\n        }\n\n      return config;\n    }, function (error) {\n      return Promise.reject(error);\n    });\n    /*\n         * Response interceptor\n         */\n\n    this.axios.interceptors.response.use(function (response) {\n      return response;\n    }, function (error) {\n      //console.log(error)\n      if (error.response && error.response.status === 401) {\n        console.log('Authentication error of 401');\n        return Promise.reject(error.response); //window.localStorage.clear('id_token')\n        //window.localStorage.clear('user')\n        //window.localStorage.clear('token_expiry')\n        //window.location = '/login'\n      }\n\n      if (error.response && error.response.status === 400) {\n        console.log('validation error status of 400');\n        return Promise.reject(error.response);\n      }\n\n      if (error.response && error.response.status === 404) {\n        return Promise.reject(error.response);\n      }\n      /**\n      if (error.response && error.response.data.status === 'validation-error') {\n        console.log('validation error ...')\n        let output = ''\n        let message = error.response.data.result\n         /**\n        if (typeof message === 'object' && message !== null) {\n          for (var property in message) {\n            if (message.hasOwnProperty(property)) {\n              message[property].forEach(error => {\n                output += error + ' '\n              })\n            }\n          }\n        }\n        return Promise.reject(error.response)\n      } else {\n        return Promise.reject(error)\n      }**/\n\n\n      return Promise.reject(error);\n    });\n  }\n\n  _createClass(apiService, [{\n    key: \"checkTokenExpiry\",\n    value: function checkTokenExpiry(token_expiry) {\n      var now = new Date();\n\n      if (token_expiry < now) {\n        console.log('yes, token has expired');\n      } else {\n        console.log('no, token is not expired');\n      }\n    }\n  }, {\n    key: \"call\",\n    value: function call(method, path, payload, headers) {\n      var callback = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n      var config = {\n        url: path,\n        method: method,\n        headers: Object.assign({}, this.commonHeaders, headers)\n      };\n\n      switch (method) {\n        case 'PUT':\n        case 'POST':\n          config.data = JSON.stringify(payload);\n          break;\n\n        default:\n          break;\n      }\n\n      if (typeof callback === 'function') {\n        return callback(this.axios.request(config));\n      } else {\n        return this.axios.request(config);\n      }\n    }\n  }, {\n    key: \"upload\",\n    value: function upload(path, field, file) {\n      var headers = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n      var data = new FormData();\n      data.append(field, file);\n      var config = {\n        headers: Object.assign({}, this.commonHeaders, headers)\n      };\n      return this.axios.post(path, data, config);\n    }\n  }, {\n    key: \"get\",\n    value: function get(path) {\n      var headers = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      return this.call('GET', path, null, headers);\n    }\n  }, {\n    key: \"post\",\n    value: function post(path, payload) {\n      var headers = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n      return this.call('POST', path, payload, headers);\n    }\n  }, {\n    key: \"put\",\n    value: function put(path, payload) {\n      var headers = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n      return this.call('PUT', path, payload, headers);\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(path) {\n      var headers = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      return this.call('DELETE', path, null, headers);\n    }\n  }, {\n    key: \"setAuthToken\",\n    value: function setAuthToken(token) {\n      if (token) {\n        this.commonHeaders.Authorization = 'Bearer ' + token;\n      }\n    }\n  }]);\n\n  return apiService;\n}();\n\nvar commonHeaders = config.headers;\n\nif (config.demo) {\n  commonHeaders.demo = 'demo';\n}\n\nvar api = new apiService(config.baseUrl, commonHeaders);\nexport default api;","map":{"version":3,"sources":["/Applications/MAMP/htdocs/medium-clone/admin_panel/src/lib/api.js"],"names":["axios","config","uuidv4","require","apiService","url","headers","commonHeaders","create","baseURL","interceptors","request","use","request_id","token_expiry","localStorage","getItem","now","Date","error","Promise","reject","response","status","console","log","method","path","payload","callback","Object","assign","data","JSON","stringify","field","file","FormData","append","post","call","token","Authorization","demo","api","baseUrl"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport config from '../config/api_config'\n\nconst uuidv4 = require('uuid/v4')\n\nclass apiService {\n  constructor (url, headers) {\n    this.commonHeaders = headers\n\n    this.axios = axios.create({\n      baseURL: url\n    })\n\n    /*\n         * Request Interceptor\n         */\n    this.axios.interceptors.request.use(\n      function (config) {\n        config.headers.request_id = uuidv4()\n\n        //let originalRequest = config\n\n        let token_expiry = localStorage.getItem('token_expiry')\n        let now = new Date()\n\n        // console.log('time_now____: '+now);\n        // console.log('token_expiry: '+token_expiry);\n\n        if (token_expiry < now) {\n          // console.log('yes, token has expired');\n        } else {\n          // console.log('no, token has not expired');\n        }\n\n        return config\n      },\n      function (error) {\n        return Promise.reject(error)\n      }\n    )\n\n    /*\n         * Response interceptor\n         */\n    this.axios.interceptors.response.use(\n      function (response) {\n        return response\n      },\n      function (error) {\n        //console.log(error)\n\n\n        if (error.response && error.response.status === 401) {\n          console.log('Authentication error of 401')\n          return Promise.reject(error.response);\n          //window.localStorage.clear('id_token')\n          //window.localStorage.clear('user')\n          //window.localStorage.clear('token_expiry')\n          //window.location = '/login'\n        }\n\n        if (error.response && error.response.status === 400) {\n          console.log('validation error status of 400')\n\n          return Promise.reject(error.response)\n        }\n\n        if (error.response && error.response.status === 404) {\n          return Promise.reject(error.response)\n        }\n\n        /**\n        if (error.response && error.response.data.status === 'validation-error') {\n          console.log('validation error ...')\n          let output = ''\n          let message = error.response.data.result\n\n          /**\n          if (typeof message === 'object' && message !== null) {\n            for (var property in message) {\n              if (message.hasOwnProperty(property)) {\n                message[property].forEach(error => {\n                  output += error + ' '\n                })\n              }\n            }\n          }\n          return Promise.reject(error.response)\n        } else {\n          return Promise.reject(error)\n        }**/\n\n        return Promise.reject(error)\n      }\n    )\n  }\n\n  checkTokenExpiry (token_expiry) {\n    let now = new Date()\n\n    if (token_expiry < now) {\n      console.log('yes, token has expired')\n    } else {\n      console.log('no, token is not expired')\n    }\n  }\n\n  call (method, path, payload, headers, callback = null) {\n    let config = {\n      url: path,\n      method: method,\n      headers: Object.assign({}, this.commonHeaders, headers)\n    }\n\n    switch (method) {\n      case 'PUT':\n      case 'POST':\n        config.data = JSON.stringify(payload)\n        break\n      default:\n        break\n    }\n\n    if (typeof callback === 'function') {\n      return callback(\n        this.axios.request(config)\n      )\n    } else {\n      return this.axios.request(config)\n    }\n  }\n\n  upload (path, field, file, headers = null) {\n    let data = new FormData()\n    data.append(field, file)\n\n    let config = {\n      headers: Object.assign({}, this.commonHeaders, headers)\n    }\n\n    return this.axios.post(path, data, config)\n  }\n\n  get (path, headers = null) {\n    return this.call('GET', path, null, headers)\n  }\n\n  post (path, payload, headers = null) {\n    return this.call('POST', path, payload, headers)\n  }\n\n  put (path, payload, headers = null) {\n    return this.call('PUT', path, payload, headers)\n  }\n\n  delete (path, headers = null) {\n    return this.call('DELETE', path, null, headers)\n  }\n\n  setAuthToken (token) {\n    if (token) {\n      this.commonHeaders.Authorization = 'Bearer ' + token\n    }\n  }\n}\n\nlet commonHeaders = config.headers\n\nif (config.demo) {\n  commonHeaders.demo = 'demo'\n}\n\nlet api = new apiService(config.baseUrl, commonHeaders)\n\nexport default api\n"]},"metadata":{},"sourceType":"module"}