{"ast":null,"code":"import _objectSpread from \"/Applications/MAMP/htdocs/medium-clone/admin_panel/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport api from '../lib/api';\nimport { push } from 'react-router-redux'; // ----------------------------\n// Constants\n// ----------------------------\n\nvar LOGIN_REQUEST = 'LOGIN_REQUEST';\nvar LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nvar LOGIN_FAILURE = 'LOGIN_FAILURE'; // const LOGIN_REFRESH_TOKEN = 'LOGIN_REFRESH_TOKEN'\n// const LOGIN_REFRESH_TOKEN_SUCESS = 'LOGIN_REFRESH_TOKEN_SUCESS'\n\nvar LOGOUT_REQUEST = 'LOGOUT_REQUEST';\nvar LOGOUT_SUCCESS = 'LOGOUT_SUCCESS'; // const LOGOUT_FAILURE = 'LOGOUT_FAILURE'\n// ----------------------------\n//  Actions\n// ----------------------------\n\nfunction requestLogin(creds) {\n  console.log('authReducer: requestLogin called.');\n  return {\n    type: LOGIN_REQUEST,\n    payload: {\n      isFetching: true,\n      isAuthenticated: false,\n      user: {\n        username: creds.username\n      },\n      authFlag: true,\n      authMessage: 'Verifying...'\n    }\n  };\n}\n\nfunction loginError(message) {\n  console.log('authReducer: loginError action called');\n  return {\n    type: LOGIN_FAILURE,\n    payload: {\n      isFetching: false,\n      isAuthenticated: false,\n      authFlag: false,\n      authMessage: message,\n      authMessageClass: 'red'\n    }\n  };\n}\n\nfunction loginSuccess(user, token, tokenExpiry) {\n  console.log('authReducer: loginSuccess action called');\n  return {\n    type: LOGIN_SUCCESS,\n    payload: {\n      isFetching: false,\n      isAuthenticated: true,\n      token: token,\n      tokenExpiry: tokenExpiry,\n      user: user\n    }\n  };\n}\n\nfunction requestLogout() {\n  return {\n    type: LOGOUT_REQUEST,\n    payload: {\n      isFetching: true,\n      isAuthenticated: true\n    }\n  };\n}\n\nexport function receiveLogout() {\n  console.log('authReducer: logout action called');\n  return {\n    type: LOGOUT_SUCCESS,\n    payload: {\n      isFetching: false,\n      isAuthenticated: false\n    }\n  };\n}\nexport function loginUser(creds) {\n  var redirect = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '/';\n  console.log('loginUser action called');\n  console.log(creds);\n  return function (dispatch) {\n    dispatch(requestLogin(creds));\n    api.post('login', {\n      email: creds.email,\n      password: creds.password\n    }).then(function (response) {\n      if (response.data.status === 'ok') {\n        console.log(response.data.result);\n        api.setAuthToken(response.data.result.access_token);\n        localStorage.setItem('id_token', response.data.result.access_token);\n        localStorage.setItem('user', JSON.stringify(response.data.result.user));\n        var expireTime = new Date();\n        expireTime.setSeconds(expireTime.getSeconds() + response.data.result.expires_in);\n        localStorage.setItem('token_expiry', expireTime);\n        dispatch(loginSuccess(response.data.result.user, response.data.result.token, expireTime));\n        dispatch(push('/article/list'));\n        console.log('login ok');\n      } else {\n        console.log('invalid credentials');\n      }\n    }).catch(function (error) {\n      console.log('*** api error ***');\n      console.log(error.status);\n      console.log(error); // console.log(error.response.data);\n\n      console.log('*** eof. api error ***');\n\n      if (error.status === 401) {\n        dispatch(loginError({\n          body: 'Invalid credentials'\n        }));\n      } else {\n        dispatch(loginError({\n          body: 'We are unable to log you in at this time..'\n        }));\n      }\n    });\n  };\n}\nexport function logoutUser() {\n  return function (dispatch) {\n    dispatch(requestLogout());\n    localStorage.removeItem('id_token');\n    localStorage.removeItem('user');\n    localStorage.removeItem('token_expiry');\n    dispatch(receiveLogout());\n    dispatch(push('/login'));\n  };\n} // ----------------------------\n//  Reducer\n// ----------------------------\n\nvar initialState = {\n  isFetching: false,\n  isAuthenticated: false,\n  user: null,\n  token: null,\n  tokenExpiry: null,\n  authFlag: false,\n  authMessage: '',\n  authMessageClass: null\n};\n\nfunction loadPreviousState() {\n  var userState = localStorage.getItem('user');\n  var isAuthenticatedState = localStorage.getItem('id_token');\n  var tokenExpiry = localStorage.getItem('token_expiry');\n  api.setAuthToken(isAuthenticatedState);\n  return {\n    isFetching: false,\n    isAuthenticated: !!isAuthenticatedState,\n    user: userState ? JSON.parse(userState) : null,\n    token: isAuthenticatedState,\n    tokenExpiry: tokenExpiry ? new Date(tokenExpiry) : null,\n    authFlag: false,\n    authMessage: ''\n  };\n}\n\nexport default function authReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : loadPreviousState();\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOGIN_REQUEST:\n      return _objectSpread({}, state, {\n        isFetching: true,\n        isAuthenticated: false,\n        authMessage: action.authMessage\n      });\n\n    case LOGIN_FAILURE:\n      return _objectSpread({}, state, {\n        isFetching: false,\n        isAuthenticated: false,\n        authFlag: false,\n        authMessage: action.payload.authMessage,\n        authMessageClass: action.payload.authMessageClass\n      });\n\n    case LOGIN_SUCCESS:\n      return _objectSpread({}, state, {\n        isFetching: false,\n        isAuthenticated: true,\n        errorMessage: '',\n        user: action.payload.user,\n        token: action.payload.token,\n        tokenExpiry: action.payload.tokenExpiry\n      });\n\n    case LOGOUT_REQUEST:\n      return _objectSpread({}, state, {\n        isFetching: true,\n        isAuthenticated: false\n      });\n\n    case LOGOUT_SUCCESS:\n      return initialState;\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Applications/MAMP/htdocs/medium-clone/admin_panel/src/modules/auth.js"],"names":["api","push","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT_REQUEST","LOGOUT_SUCCESS","requestLogin","creds","console","log","type","payload","isFetching","isAuthenticated","user","username","authFlag","authMessage","loginError","message","authMessageClass","loginSuccess","token","tokenExpiry","requestLogout","receiveLogout","loginUser","redirect","dispatch","post","email","password","then","response","data","status","result","setAuthToken","access_token","localStorage","setItem","JSON","stringify","expireTime","Date","setSeconds","getSeconds","expires_in","catch","error","body","logoutUser","removeItem","initialState","loadPreviousState","userState","getItem","isAuthenticatedState","parse","authReducer","state","action","errorMessage"],"mappings":"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","sourcesContent":["import api from '../lib/api'\nimport { push } from 'react-router-redux'\n\n// ----------------------------\n// Constants\n// ----------------------------\nconst LOGIN_REQUEST = 'LOGIN_REQUEST'\nconst LOGIN_SUCCESS = 'LOGIN_SUCCESS'\nconst LOGIN_FAILURE = 'LOGIN_FAILURE'\n// const LOGIN_REFRESH_TOKEN = 'LOGIN_REFRESH_TOKEN'\n// const LOGIN_REFRESH_TOKEN_SUCESS = 'LOGIN_REFRESH_TOKEN_SUCESS'\nconst LOGOUT_REQUEST = 'LOGOUT_REQUEST'\nconst LOGOUT_SUCCESS = 'LOGOUT_SUCCESS'\n// const LOGOUT_FAILURE = 'LOGOUT_FAILURE'\n\n// ----------------------------\n//  Actions\n// ----------------------------\n\n\nfunction requestLogin (creds) {\n  console.log('authReducer: requestLogin called.')\n  return {\n    type: LOGIN_REQUEST,\n    payload: {\n      isFetching: true,\n      isAuthenticated: false,\n      user: { username: creds.username},\n      authFlag: true,\n      authMessage: 'Verifying...'\n    }\n  }\n}\n\nfunction loginError (message) {\n  console.log('authReducer: loginError action called')\n  return {\n    type: LOGIN_FAILURE,\n    payload: {\n      isFetching: false,\n      isAuthenticated: false,\n      authFlag: false,\n      authMessage: message,\n      authMessageClass: 'red'\n    }\n  }\n}\n\nfunction loginSuccess (user, token, tokenExpiry) {\n  console.log('authReducer: loginSuccess action called')\n  return {\n    type: LOGIN_SUCCESS,\n    payload: {\n      isFetching: false,\n      isAuthenticated: true,\n      token: token,\n      tokenExpiry: tokenExpiry,\n      user: user\n    }\n  }\n}\n\nfunction requestLogout () {\n  return {\n    type: LOGOUT_REQUEST,\n    payload: {\n      isFetching: true,\n      isAuthenticated: true\n    }\n  }\n}\n\nexport function receiveLogout () {\n  console.log('authReducer: logout action called')\n  return {\n    type: LOGOUT_SUCCESS,\n    payload: {\n      isFetching: false,\n      isAuthenticated: false\n    }\n  }\n}\n\nexport function loginUser (creds, redirect = '/') {\n  console.log('loginUser action called')\n\n  console.log(creds);\n\n  return dispatch => {\n    dispatch(requestLogin(creds))\n\n    api\n      .post('login', { email: creds.email, password: creds.password})\n      .then(response => {\n        if (response.data.status === 'ok') {\n          console.log(response.data.result)\n\n          api.setAuthToken(response.data.result.access_token)\n          localStorage.setItem('id_token', response.data.result.access_token)\n          localStorage.setItem('user', JSON.stringify(response.data.result.user))\n\n          let expireTime = new Date()\n          expireTime.setSeconds(expireTime.getSeconds() + response.data.result.expires_in)\n\n          localStorage.setItem('token_expiry', expireTime)\n\n          dispatch(loginSuccess(response.data.result.user, response.data.result.token, expireTime))\n\n          dispatch(push('/article/list'))\n\n          console.log('login ok')\n        } else {\n          console.log('invalid credentials')\n        }\n      })\n      .catch(error => {\n        console.log('*** api error ***')\n        console.log(error.status)\n        console.log(error)\n        // console.log(error.response.data);\n        console.log('*** eof. api error ***')\n\n        if (error.status === 401) {\n          dispatch(loginError({\n            body: 'Invalid credentials'\n          }))\n        } else {\n          dispatch(loginError({\n            body: 'We are unable to log you in at this time..'\n          }))\n        }\n      })\n  }\n}\n\nexport function logoutUser () {\n  return dispatch => {\n    dispatch(requestLogout())\n\n    localStorage.removeItem('id_token')\n    localStorage.removeItem('user')\n    localStorage.removeItem('token_expiry')\n\n    dispatch(receiveLogout())\n\n    dispatch(push('/login'))\n  }\n}\n\n// ----------------------------\n//  Reducer\n// ----------------------------\n\nconst initialState = {\n  isFetching: false,\n  isAuthenticated: false,\n  user: null,\n  token: null,\n  tokenExpiry: null,\n  authFlag: false,\n  authMessage: '',\n  authMessageClass: null\n}\n\nfunction loadPreviousState () {\n  let userState = localStorage.getItem('user')\n  let isAuthenticatedState = localStorage.getItem('id_token')\n  let tokenExpiry = localStorage.getItem('token_expiry')\n  api.setAuthToken(isAuthenticatedState)\n\n  return {\n    isFetching: false,\n    isAuthenticated: !!isAuthenticatedState,\n    user: userState ? JSON.parse(userState) : null,\n    token: isAuthenticatedState,\n    tokenExpiry: tokenExpiry ? new Date(tokenExpiry) : null,\n    authFlag: false,\n    authMessage: ''\n  }\n}\n\nexport default function authReducer (state = loadPreviousState(), action) {\n  switch (action.type) {\n    case LOGIN_REQUEST:\n      return {\n        ...state,\n        isFetching: true,\n        isAuthenticated: false,\n        authMessage: action.authMessage\n      }\n    case LOGIN_FAILURE:\n      return {\n        ...state,\n        isFetching: false,\n        isAuthenticated: false,\n        authFlag: false,\n        authMessage: action.payload.authMessage,\n        authMessageClass: action.payload.authMessageClass\n      }\n    case LOGIN_SUCCESS:\n      return {\n        ...state,\n        isFetching: false,\n        isAuthenticated: true,\n        errorMessage: '',\n        user: action.payload.user,\n        token: action.payload.token,\n        tokenExpiry: action.payload.tokenExpiry\n      }\n    case LOGOUT_REQUEST:\n      return {\n        ...state,\n        isFetching: true,\n        isAuthenticated: false\n      }\n    case LOGOUT_SUCCESS:\n      return initialState\n    default:\n      return state\n  }\n}\n"]},"metadata":{},"sourceType":"module"}