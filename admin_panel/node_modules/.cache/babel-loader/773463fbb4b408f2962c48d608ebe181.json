{"ast":null,"code":"import _classCallCheck from \"/Applications/MAMP/htdocs/medium-clone/admin_panel/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Applications/MAMP/htdocs/medium-clone/admin_panel/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Applications/MAMP/htdocs/medium-clone/admin_panel/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Applications/MAMP/htdocs/medium-clone/admin_panel/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Applications/MAMP/htdocs/medium-clone/admin_panel/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Applications/MAMP/htdocs/medium-clone/admin_panel/src/pages/login/containers/LoginContainer.js\";\nimport React from 'react';\nimport { Card, Col, Row } from 'antd';\nimport LoginForm from '../components/LoginForm';\nimport * as authActions from '../../../modules/auth';\nimport SplashLogo from '../../../assets/img/octocat.png';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { push } from 'react-router-redux';\nimport { isLoggedIn } from '../../components/UserIsAuthenticated';\n\nvar LoginContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(LoginContainer, _React$Component);\n\n  function LoginContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, LoginContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(LoginContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onLogin = function (creds) {\n      console.log('Form submitted with Username:' + creds.username + ' and password: ' + creds.password);\n\n      _this.props.loginUser(creds);\n    };\n\n    return _this;\n  }\n\n  _createClass(LoginContainer, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"login-form-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"login-form-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(Card, {\n        id: \"login-form\",\n        bordered: true,\n        title: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(Col, {\n        className: \"login-form-left\",\n        span: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"login-splash\",\n        src: SplashLogo,\n        alt: \"login-branding-logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        className: \"login-form-branding\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, \"MediumClone\"), React.createElement(\"p\", {\n        className: \"login-form-branding-sub\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, \"...\")), React.createElement(Col, {\n        className: \"login-form-right\",\n        span: 14,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(LoginForm, {\n        onSubmit: this.onLogin,\n        authMessage: this.props.authMessage,\n        isAuthenticated: this.props.isAuthenticated,\n        isFetching: this.props.isFetching,\n        authMessageClass: this.props.authMessageClass,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      })))))));\n    }\n  }]);\n\n  return LoginContainer;\n}(React.Component);\n\nfunction mapStateToProps(state) {\n  return {\n    isFetching: state.authReducer.isFetching,\n    isAuthenticated: state.authReducer.isAuthenticated,\n    authMessage: state.authReducer.authMessage,\n    authMessageClass: state.authReducer.authMessageClass,\n    user: state.authReducer.user\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    loginUser: authActions.loginUser,\n    goToRegister: function goToRegister() {\n      return push('/register');\n    }\n  }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(isLoggedIn(LoginContainer));","map":{"version":3,"sources":["/Applications/MAMP/htdocs/medium-clone/admin_panel/src/pages/login/containers/LoginContainer.js"],"names":["React","Card","Col","Row","LoginForm","authActions","SplashLogo","bindActionCreators","connect","push","isLoggedIn","LoginContainer","onLogin","creds","console","log","username","password","props","loginUser","authMessage","isAuthenticated","isFetching","authMessageClass","Component","mapStateToProps","state","authReducer","user","mapDispatchToProps","dispatch","goToRegister"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Card, Col, Row } from 'antd'\nimport LoginForm from '../components/LoginForm'\nimport * as authActions from '../../../modules/auth'\nimport SplashLogo from '../../../assets/img/octocat.png'\nimport { bindActionCreators } from 'redux'\nimport {connect} from 'react-redux'\nimport { push } from 'react-router-redux'\nimport { isLoggedIn } from '../../components/UserIsAuthenticated'\n\nclass LoginContainer extends React.Component {\n\n  onLogin = (creds) => {\n    console.log('Form submitted with Username:' + creds.username + ' and password: ' + creds.password)\n\n    this.props.loginUser(creds)\n  }\n\n  render () {\n    return (\n      <React.Fragment>\n        <div className={\"login-form-container\"}>\n          <div className={\"login-form-content\"}>\n            <Card id=\"login-form\" bordered={true} title={\"\"}>\n\n                <Row>\n                  <Col className=\"login-form-left\" span={10}>\n                    <img className={\"login-splash\"} src={SplashLogo} alt={\"login-branding-logo\"} />\n                    <h1 className={\"login-form-branding\"}>MediumClone</h1>\n                    <p className={\"login-form-branding-sub\"}>...</p>\n                  </Col>\n                  <Col className={\"login-form-right\"} span={14}>\n                    <LoginForm\n                      onSubmit={this.onLogin}\n                      authMessage={this.props.authMessage}\n                      isAuthenticated={this.props.isAuthenticated}\n                      isFetching={this.props.isFetching}\n                      authMessageClass={this.props.authMessageClass}\n                    />\n                  </Col>\n                </Row>\n\n            </Card>\n          </div>\n        </div>\n      </React.Fragment>\n    )\n  }\n}\n\nfunction mapStateToProps (state) {\n  return {\n    isFetching: state.authReducer.isFetching,\n    isAuthenticated: state.authReducer.isAuthenticated,\n    authMessage: state.authReducer.authMessage,\n    authMessageClass: state.authReducer.authMessageClass,\n    user: state.authReducer.user\n  }\n}\n\nfunction mapDispatchToProps (dispatch) {\n  return bindActionCreators({\n    loginUser: authActions.loginUser,\n    goToRegister: () => push('/register')\n  }, dispatch)\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(isLoggedIn(LoginContainer))\n"]},"metadata":{},"sourceType":"module"}